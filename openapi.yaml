# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /addresses:
        get:
            tags:
                - AddressService
                - 收货地址
            summary: 地址
            description: 地址列表
            operationId: AddressService_ListAddress
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAddressReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - AddressService
                - 收货地址
            summary: 地址
            description: 创建地址
            operationId: AddressService_CreateAddress
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateAddressRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Address'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /addresses/{id}:
        get:
            tags:
                - AddressService
                - 收货地址
            summary: 地址
            description: 地址详情
            operationId: AddressService_GetAddress
            parameters:
                - name: id
                  in: path
                  description: 地址id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Address'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - AddressService
                - 收货地址
            summary: 地址
            description: 修改地址
            operationId: AddressService_UpdateAddress
            parameters:
                - name: id
                  in: path
                  description: 地址id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAddressRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Address'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - AddressService
                - 收货地址
            summary: 地址
            description: 删除地址
            operationId: AddressService_DeleteAddress
            parameters:
                - name: id
                  in: path
                  description: 地址id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /authenticate:
        post:
            tags:
                - AuthenticateService
                - 登录
            summary: 登录认证
            description: 获取令牌
            operationId: AuthenticateService_CreateAuthenticate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateAuthenticateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Authentication'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /categories:
        get:
            tags:
                - ProductService
                - 产品
            summary: 类目
            description: 类目列表
            operationId: ProductService_ListCategory
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListCategoryReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /favorites/product:
        post:
            tags:
                - FavoriteService
                - 收藏
            summary: 收藏产品
            description: 收藏产品
            operationId: FavoriteService_CreateFavoriteProduct
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateFavoriteProductRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /favorites/product/actions/cancel:
        post:
            tags:
                - FavoriteService
                - 收藏
            summary: 取消收藏产品
            description: 取消收藏产品
            operationId: FavoriteService_CancelFavoriteProduct
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CancelFavoriteProductRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /invoice-accounts:
        get:
            tags:
                - InvoiceAccountService
                - 发票账户
            summary: 发票账户
            description: 发票账户列表
            operationId: InvoiceAccountService_ListInvoiceAccount
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListInvoiceAccountReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - InvoiceAccountService
                - 发票账户
            summary: 创建发票账户
            description: 创建发票账户
            operationId: InvoiceAccountService_CreateInvoiceAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateInvoiceAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvoiceAccount'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /invoice-accounts/{id}:
        get:
            tags:
                - InvoiceAccountService
                - 发票账户
            summary: 发票账户
            description: 发票账户详情
            operationId: InvoiceAccountService_GetInvoiceAccount
            parameters:
                - name: id
                  in: path
                  description: 发票账户id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvoiceAccount'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - InvoiceAccountService
                - 发票账户
            summary: 修改发票账户
            description: 修改发票账户
            operationId: InvoiceAccountService_UpdateInvoiceAccount
            parameters:
                - name: id
                  in: path
                  description: 发票账户id
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateInvoiceAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/InvoiceAccount'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - InvoiceAccountService
                - 发票账户
            summary: 删除发票账户
            description: 删除发票账户
            operationId: InvoiceAccountService_DeleteInvoiceAccount
            parameters:
                - name: id
                  in: path
                  description: 发票账户id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orders:
        get:
            tags:
                - OrderService
                - 订单
            summary: 订单列表
            description: 订单列表
            operationId: OrderService_ListOrder
            parameters:
                - name: pageNum
                  in: query
                  description: 页数 从0开始
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: 每页数据量 <= 1000
                  schema:
                    type: string
                - name: status
                  in: query
                  description: 订单状态
                  schema:
                    type: integer
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrderReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - OrderService
                - 订单
            summary: 创建订单
            description: 创建订单
            operationId: OrderService_CreateOrder
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateOrderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Order'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orders/{id}:
        get:
            tags:
                - OrderService
                - 订单
            summary: 订单详情
            description: 订单详情
            operationId: OrderService_GetOrder
            parameters:
                - name: id
                  in: path
                  description: 订单ID
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Order'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /orders/{id}/actions/cancel:
        post:
            tags:
                - OrderService
                - 订单
            summary: 取消订单
            description: 取消订单
            operationId: OrderService_CancelOrder
            parameters:
                - name: id
                  in: path
                  description: 订单ID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CancelOrderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /products:
        get:
            tags:
                - ProductService
                - 产品
            summary: 产品
            description: 产品列表
            operationId: ProductService_ListProduct
            parameters:
                - name: pageNum
                  in: query
                  description: 页数 从0开始
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: 每页数据量 <= 1000
                  schema:
                    type: string
                - name: categoryId
                  in: query
                  description: 类目id
                  schema:
                    type: string
                - name: promotionId
                  in: query
                  description: 推荐id。小程序二维码进入时，url会带上此参数
                  schema:
                    type: string
                - name: onlyFavorite
                  in: query
                  description: 只看收藏商品
                  schema:
                    type: boolean
                - name: q
                  in: query
                  description: 品名/编码
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListProductReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /products/{id}:
        get:
            tags:
                - ProductService
                - 产品
            summary: 产品
            description: 产品详情
            operationId: ProductService_GetProduct
            parameters:
                - name: id
                  in: path
                  description: 产品id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Product'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /shopping-carts:
        get:
            tags:
                - ShoppingCartService
                - 购物车
            summary: 购物车列表
            description: 购物车列表
            operationId: ShoppingCartService_ListShoppingCart
            parameters:
                - name: pageNum
                  in: query
                  description: 分页页码 从1开始
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 分页大小
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListShoppingCartReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ShoppingCartService
                - 购物车
            summary: 创建购物车
            description: 创建购物车
            operationId: ShoppingCartService_CreateShoppingCart
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateShoppingCartRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ShoppingCartService
                - 购物车
            summary: 删除购物车商品
            description: 形如/shopping-carts?ids[]=1&ids[]=2&ids[]=3&ids[]=4
            operationId: ShoppingCartService_DeleteShoppingCart
            parameters:
                - name: ids
                  in: query
                  description: 购物车ID数组 1-1000个
                  schema:
                    type: array
                    items:
                        type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /shopping-carts/{id}:
        put:
            tags:
                - ShoppingCartService
                - 购物车
            summary: 修改购物车商品数量
            description: 修改购物车商品数量
            operationId: ShoppingCartService_UpdateShoppingCart
            parameters:
                - name: id
                  in: path
                  description: 购物车ID
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateShoppingCartRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /sms-code:
        post:
            tags:
                - AuthenticateService
                - 登录
            summary: 发送验证码
            description: 发送验证码
            operationId: AuthenticateService_SendSMSCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendSMSCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /users/me:
        get:
            tags:
                - UserService
                - 用户信息
            summary: 用户信息
            description: 获取自己的用户信息
            operationId: UserService_GetMe
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AdditionalPropertiesItem:
            type: object
            properties:
                schemaOrReference:
                    $ref: '#/components/schemas/SchemaOrReference'
                boolean:
                    type: boolean
        Address:
            type: object
            properties:
                id:
                    type: string
                    description: 地址id
                name:
                    type: string
                    description: 收货人
                phone:
                    type: string
                    description: 手机号
                province:
                    type: string
                    description: 省份
                city:
                    type: string
                    description: 城市
                district:
                    type: string
                    description: 区县
                detail:
                    type: string
                    description: 详细地址
                isDefault:
                    type: boolean
                    description: 是否默认地址
        Any:
            type: object
            properties:
                value:
                    $ref: '#/components/schemas/GoogleProtobufAny'
                yaml:
                    type: string
        AnyOrExpression:
            type: object
            properties:
                any:
                    $ref: '#/components/schemas/Any'
                expression:
                    $ref: '#/components/schemas/Expression'
        Authentication:
            type: object
            properties:
                tokenType:
                    type: string
                    description: Cookie 类型，固定为Bearer
                accessToken:
                    type: string
                    description: Cookie 令牌：Header['Authorization'] = token_type + ' '+ access_token
                expiresIn:
                    type: string
                    description: Cookie 有效期
                refreshToken:
                    type: string
                    description: Cookie 刷新令牌
                refreshTokenExpiresIn:
                    type: string
                    description: refresh_token 有效期
                createTimestamp:
                    type: string
                    description: 创建时间 毫秒时间戳
        CancelFavoriteProductRequest:
            required:
                - ids
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: string
                    description: 产品ID数组 1-1000个
        CancelOrderRequest:
            type: object
            properties:
                id:
                    type: string
                    description: 订单ID
            description: 只有待审核状态的订单可以取消
        Category:
            type: object
            properties:
                id:
                    type: string
                    description: 类目id
                name:
                    type: string
                    description: 类目名称
        CreateAddressRequest:
            type: object
            properties:
                name:
                    type: string
                    description: 收货人
                phone:
                    type: string
                    description: 手机号
                province:
                    type: string
                    description: 省份
                city:
                    type: string
                    description: 城市
                district:
                    type: string
                    description: 区县
                detail:
                    type: string
                    description: 详细地址
                isDefault:
                    type: boolean
                    description: 是否默认地址
        CreateAuthenticateRequest:
            type: object
            properties:
                type:
                    type: integer
                    description: 登录类型
                    format: enum
                phoneKey:
                    type: string
                    description: 验证接口返回的key：验证码登录必填
                smsCode:
                    type: string
                    description: 验证码：验证码登录必填(4位数字)
                wxAuthCode:
                    type: string
                    description: 微信code：微信手机号授权必填
            description: 登录请求
        CreateFavoriteProductRequest:
            required:
                - ids
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: string
                    description: 产品ID数组 1-1000个
        CreateInvoiceAccountRequest:
            type: object
            properties:
                title:
                    type: string
                    description: 发票抬头
                taxNumber:
                    type: string
                    description: 税号
                registerAddress:
                    type: string
                    description: 注册地址
                registerPhone:
                    type: string
                    description: 注册电话
                bank:
                    type: string
                    description: 开户银行
                bankAccount:
                    type: string
                    description: 银行账号
        CreateOrderRequest:
            type: object
            properties:
                receiverName:
                    type: string
                    description: 收货人
                receiverPhone:
                    type: string
                    description: 收货人手机号
                receiverAddress:
                    type: string
                    description: 收货地址
                invoiceRequirement:
                    type: integer
                    description: 开票要求
                    format: enum
                invoiceAccount:
                    allOf:
                        - $ref: '#/components/schemas/InvoiceAccount'
                    description: 无票时，不传
                paymentTerms:
                    type: integer
                    description: 支付条款：现付、挂账
                    format: enum
                paymentOption:
                    type: integer
                    description: '支付方式: 挂账时，无需传'
                    format: enum
                shoppingCartIds:
                    type: array
                    items:
                        type: string
                    description: 购物车ID数组 【1-200】
        CreateShoppingCartRequest:
            required:
                - productIds
            type: object
            properties:
                productIds:
                    type: array
                    items:
                        type: string
                    description: 产品ID数组 1-1000个
        DefaultType:
            type: object
            properties:
                number:
                    type: number
                    format: double
                boolean:
                    type: boolean
                string:
                    type: string
        Discriminator:
            type: object
            properties:
                propertyName:
                    type: string
                mapping:
                    $ref: '#/components/schemas/Strings'
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: When request bodies or response payloads may be one of a number of different schemas, a `discriminator` object can be used to aid in serialization, deserialization, and validation.  The discriminator is a specific object in a schema which is used to inform the consumer of the specification of an alternative schema based on the value associated with it.  When using the discriminator, _inline_ schemas will not be considered.
        Encoding:
            type: object
            properties:
                contentType:
                    type: string
                headers:
                    $ref: '#/components/schemas/HeadersOrReferences'
                style:
                    type: string
                explode:
                    type: boolean
                allowReserved:
                    type: boolean
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: A single encoding definition applied to a single schema property.
        Encodings:
            type: object
            properties:
                additionalProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedEncoding'
        Example:
            type: object
            properties:
                summary:
                    type: string
                description:
                    type: string
                value:
                    $ref: '#/components/schemas/Any'
                externalValue:
                    type: string
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
        ExampleOrReference:
            type: object
            properties:
                example:
                    $ref: '#/components/schemas/Example'
                reference:
                    $ref: '#/components/schemas/Reference'
        ExamplesOrReferences:
            type: object
            properties:
                additionalProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedExampleOrReference'
        Expression:
            type: object
            properties:
                additionalProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
        ExternalDocs:
            type: object
            properties:
                description:
                    type: string
                url:
                    type: string
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: Allows referencing an external resource for extended documentation.
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        Header:
            type: object
            properties:
                description:
                    type: string
                required:
                    type: boolean
                deprecated:
                    type: boolean
                allowEmptyValue:
                    type: boolean
                style:
                    type: string
                explode:
                    type: boolean
                allowReserved:
                    type: boolean
                schema:
                    $ref: '#/components/schemas/SchemaOrReference'
                example:
                    $ref: '#/components/schemas/Any'
                examples:
                    $ref: '#/components/schemas/ExamplesOrReferences'
                content:
                    $ref: '#/components/schemas/MediaTypes'
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: 'The Header Object follows the structure of the Parameter Object with the following changes:  1. `name` MUST NOT be specified, it is given in the corresponding `headers` map. 1. `in` MUST NOT be specified, it is implicitly in `header`. 1. All traits that are affected by the location MUST be applicable to a location of `header` (for example, `style`).'
        HeaderOrReference:
            type: object
            properties:
                header:
                    $ref: '#/components/schemas/Header'
                reference:
                    $ref: '#/components/schemas/Reference'
        HeadersOrReferences:
            type: object
            properties:
                additionalProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedHeaderOrReference'
        InvoiceAccount:
            type: object
            properties:
                title:
                    type: string
                    description: 发票抬头
                taxNumber:
                    type: string
                    description: 税号
                registerAddress:
                    type: string
                    description: 注册地址
                registerPhone:
                    type: string
                    description: 注册电话
                bank:
                    type: string
                    description: 开户银行
                bankAccount:
                    type: string
                    description: 银行账号
        ItemsItem:
            type: object
            properties:
                schemaOrReference:
                    type: array
                    items:
                        $ref: '#/components/schemas/SchemaOrReference'
        Link:
            type: object
            properties:
                operationRef:
                    type: string
                operationId:
                    type: string
                parameters:
                    $ref: '#/components/schemas/AnyOrExpression'
                requestBody:
                    $ref: '#/components/schemas/AnyOrExpression'
                description:
                    type: string
                server:
                    $ref: '#/components/schemas/Server'
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: The `Link object` represents a possible design-time link for a response. The presence of a link does not guarantee the caller's ability to successfully invoke it, rather it provides a known relationship and traversal mechanism between responses and other operations.  Unlike _dynamic_ links (i.e. links provided **in** the response payload), the OAS linking mechanism does not require link information in the runtime response.  For computing links, and providing instructions to execute them, a runtime expression is used for accessing values in an operation and using them as parameters while invoking the linked operation.
        LinkOrReference:
            type: object
            properties:
                link:
                    $ref: '#/components/schemas/Link'
                reference:
                    $ref: '#/components/schemas/Reference'
        LinksOrReferences:
            type: object
            properties:
                additionalProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedLinkOrReference'
        ListAddressReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Address'
                    description: 地址列表
        ListCategoryReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Category'
        ListInvoiceAccountReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/InvoiceAccount'
                    description: 发票账户列表
        ListOrderReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Order'
        ListProductReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Product'
        ListShoppingCartReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/ShoppingCart'
        MediaType:
            type: object
            properties:
                schema:
                    $ref: '#/components/schemas/SchemaOrReference'
                example:
                    $ref: '#/components/schemas/Any'
                examples:
                    $ref: '#/components/schemas/ExamplesOrReferences'
                encoding:
                    $ref: '#/components/schemas/Encodings'
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: Each Media Type Object provides schema and examples for the media type identified by its key.
        MediaTypes:
            type: object
            properties:
                additionalProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedMediaType'
        NamedAny:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    allOf:
                        - $ref: '#/components/schemas/Any'
                    description: Mapped value
            description: Automatically-generated message used to represent maps of Any as ordered (name,value) pairs.
        NamedEncoding:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    allOf:
                        - $ref: '#/components/schemas/Encoding'
                    description: Mapped value
            description: Automatically-generated message used to represent maps of Encoding as ordered (name,value) pairs.
        NamedExampleOrReference:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    allOf:
                        - $ref: '#/components/schemas/ExampleOrReference'
                    description: Mapped value
            description: Automatically-generated message used to represent maps of ExampleOrReference as ordered (name,value) pairs.
        NamedHeaderOrReference:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    allOf:
                        - $ref: '#/components/schemas/HeaderOrReference'
                    description: Mapped value
            description: Automatically-generated message used to represent maps of HeaderOrReference as ordered (name,value) pairs.
        NamedLinkOrReference:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    allOf:
                        - $ref: '#/components/schemas/LinkOrReference'
                    description: Mapped value
            description: Automatically-generated message used to represent maps of LinkOrReference as ordered (name,value) pairs.
        NamedMediaType:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    allOf:
                        - $ref: '#/components/schemas/MediaType'
                    description: Mapped value
            description: Automatically-generated message used to represent maps of MediaType as ordered (name,value) pairs.
        NamedSchemaOrReference:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    allOf:
                        - $ref: '#/components/schemas/SchemaOrReference'
                    description: Mapped value
            description: Automatically-generated message used to represent maps of SchemaOrReference as ordered (name,value) pairs.
        NamedServerVariable:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    allOf:
                        - $ref: '#/components/schemas/ServerVariable'
                    description: Mapped value
            description: Automatically-generated message used to represent maps of ServerVariable as ordered (name,value) pairs.
        NamedString:
            type: object
            properties:
                name:
                    type: string
                    description: Map key
                value:
                    type: string
                    description: Mapped value
            description: Automatically-generated message used to represent maps of string as ordered (name,value) pairs.
        Order:
            type: object
            properties:
                id:
                    type: string
                    description: 订单ID
                createTime:
                    type: string
                    description: 下单时间
                summary:
                    type: string
                    description: 订单摘要（）
                no:
                    type: string
                    description: 订单号
                status:
                    type: integer
                    description: 订单状态
                    format: enum
                subtotal:
                    type: string
                    description: 汇总金额（小计）
                tax:
                    type: string
                    description: 税费
                shipping:
                    type: string
                    description: 运费
                discount:
                    type: string
                    description: 优惠金额
                grandTotal:
                    type: string
                    description: 最终总额
                balanceDeduction:
                    type: string
                    description: 余额抵扣
                amountDue:
                    type: string
                    description: 应付金额
                amountPaid:
                    type: string
                    description: 实付金额
                paymentTerms:
                    type: integer
                    description: 支付条款：现付、挂账
                    format: enum
                paymentOption:
                    type: string
                    description: 支付方式
                paymentTime:
                    type: string
                    description: 支付时间
                receiverName:
                    type: string
                    description: 收货人
                receiverPhone:
                    type: string
                    description: 收货人手机号
                receiverAddress:
                    type: string
                    description: 收货地址
                invoiceRequirement:
                    type: integer
                    description: 开票要求
                    format: enum
                invoiceAccount:
                    allOf:
                        - $ref: '#/components/schemas/InvoiceAccount'
                    description: 无票时，不返回
                totalBox:
                    type: integer
                    description: 总箱数
                    format: int32
                buyerNote:
                    type: string
                    description: 买家备注
                sellerNote:
                    type: string
                    description: 卖家备注
        Product:
            type: object
            properties:
                id:
                    type: string
                    description: 产品id
                createTime:
                    type: string
                    description: 创建时间
                updateTime:
                    type: string
                    description: 更新时间
                mainImageUrl:
                    type: string
                    description: 主图
                detailImageUrls:
                    type: array
                    items:
                        type: string
                    description: 详情图
                name:
                    type: string
                    description: 产品名称
                no:
                    type: string
                    description: 产品编号
                spec:
                    type: string
                    description: 规格
                material:
                    type: string
                    description: 材质
                weight:
                    type: string
                    description: 重量
                barcode:
                    type: string
                    description: 69码
                categoryId:
                    type: integer
                    description: 类目id
                    format: int32
                categoryName:
                    type: string
                    description: 类目名称
                supplierPackingRate:
                    type: integer
                    description: 供应商装箱率
                    format: int32
                internalPackingRate:
                    type: integer
                    description: 内部装箱率
                    format: int32
                wholesalePrice:
                    type: string
                    description: 批发价
                dropshippingPrice:
                    type: string
                    description: 代发价
                unifiedPrice:
                    type: string
                    description: 统一控价
                wxMomentText:
                    type: string
                    description: 发圈文案
                tmallShopUrl:
                    type: string
                    description: 天猫店铺链接 如果没有值，表示没有天猫链接，隐藏跳转按钮
                labels:
                    type: array
                    items:
                        type: string
                    description: 产品标签
                isFavorite:
                    type: boolean
                    description: 是否收藏
        Properties:
            type: object
            properties:
                additionalProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedSchemaOrReference'
        Reference:
            type: object
            properties:
                Ref:
                    type: string
                summary:
                    type: string
                description:
                    type: string
            description: A simple object to allow referencing other components in the specification, internally and externally.  The Reference Object is defined by JSON Reference and follows the same structure, behavior and rules.   For this specification, reference resolution is accomplished as defined by the JSON Reference specification and not by the JSON Schema specification.
        Response:
            type: object
            properties:
                description:
                    type: string
                headers:
                    $ref: '#/components/schemas/HeadersOrReferences'
                content:
                    $ref: '#/components/schemas/MediaTypes'
                links:
                    $ref: '#/components/schemas/LinksOrReferences'
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: Describes a single response from an API Operation, including design-time, static  `links` to operations based on the response.
        Schema:
            type: object
            properties:
                nullable:
                    type: boolean
                discriminator:
                    $ref: '#/components/schemas/Discriminator'
                readOnly:
                    type: boolean
                writeOnly:
                    type: boolean
                xml:
                    $ref: '#/components/schemas/Xml'
                externalDocs:
                    $ref: '#/components/schemas/ExternalDocs'
                example:
                    $ref: '#/components/schemas/Any'
                deprecated:
                    type: boolean
                title:
                    type: string
                multipleOf:
                    type: number
                    format: double
                maximum:
                    type: number
                    format: double
                exclusiveMaximum:
                    type: boolean
                minimum:
                    type: number
                    format: double
                exclusiveMinimum:
                    type: boolean
                maxLength:
                    type: string
                minLength:
                    type: string
                pattern:
                    type: string
                maxItems:
                    type: string
                minItems:
                    type: string
                uniqueItems:
                    type: boolean
                maxProperties:
                    type: string
                minProperties:
                    type: string
                required:
                    type: array
                    items:
                        type: string
                enum:
                    type: array
                    items:
                        $ref: '#/components/schemas/Any'
                type:
                    type: string
                allOf:
                    type: array
                    items:
                        $ref: '#/components/schemas/SchemaOrReference'
                oneOf:
                    type: array
                    items:
                        $ref: '#/components/schemas/SchemaOrReference'
                anyOf:
                    type: array
                    items:
                        $ref: '#/components/schemas/SchemaOrReference'
                not:
                    $ref: '#/components/schemas/Schema'
                items:
                    $ref: '#/components/schemas/ItemsItem'
                properties:
                    $ref: '#/components/schemas/Properties'
                additionalProperties:
                    $ref: '#/components/schemas/AdditionalPropertiesItem'
                default:
                    $ref: '#/components/schemas/DefaultType'
                description:
                    type: string
                format:
                    type: string
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: The Schema Object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. This object is an extended subset of the JSON Schema Specification Wright Draft 00.  For more information about the properties, see JSON Schema Core and JSON Schema Validation. Unless stated otherwise, the property definitions follow the JSON Schema.
        SchemaOrReference:
            type: object
            properties:
                schema:
                    $ref: '#/components/schemas/Schema'
                reference:
                    $ref: '#/components/schemas/Reference'
        SendSMSCodeRequest:
            required:
                - phone
            type: object
            properties:
                phone:
                    type: string
                    description: 手机号^1[1-9]\\d{9}$
        Server:
            type: object
            properties:
                url:
                    type: string
                description:
                    type: string
                variables:
                    $ref: '#/components/schemas/ServerVariables'
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: An object representing a Server.
        ServerVariable:
            type: object
            properties:
                enum:
                    type: array
                    items:
                        type: string
                default:
                    type: string
                description:
                    type: string
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: An object representing a Server Variable for server URL template substitution.
        ServerVariables:
            type: object
            properties:
                additionalProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedServerVariable'
        ShoppingCart:
            type: object
            properties:
                id:
                    type: string
                    description: 购物车id
                createTime:
                    type: string
                    description: 加入时间
                product:
                    allOf:
                        - $ref: '#/components/schemas/Product'
                    description: 产品
                quantity:
                    type: integer
                    description: 数量
                    format: int32
                total:
                    type: string
                    description: 合计金额
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Strings:
            type: object
            properties:
                additionalProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedString'
        UpdateAddressRequest:
            type: object
            properties:
                id:
                    type: string
                    description: 地址id
                name:
                    type: string
                    description: 收货人
                phone:
                    type: string
                    description: 手机号
                province:
                    type: string
                    description: 省份
                city:
                    type: string
                    description: 城市
                district:
                    type: string
                    description: 区县
                detail:
                    type: string
                    description: 详细地址
                isDefault:
                    type: boolean
                    description: 是否默认地址
        UpdateInvoiceAccountRequest:
            type: object
            properties:
                id:
                    type: string
                    description: 发票账户id
                title:
                    type: string
                    description: 发票抬头
                taxNumber:
                    type: string
                    description: 税号
                registerAddress:
                    type: string
                    description: 注册地址
                registerPhone:
                    type: string
                    description: 注册电话
                bank:
                    type: string
                    description: 开户银行
                bankAccount:
                    type: string
                    description: 银行账号
        UpdateShoppingCartRequest:
            required:
                - id
                - quantity
            type: object
            properties:
                id:
                    type: string
                    description: 购物车ID
                quantity:
                    type: integer
                    description: 数量：[0-99999]，如果为0则系统自动删除该商品
                    format: int32
        User:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
        Xml:
            type: object
            properties:
                name:
                    type: string
                namespace:
                    type: string
                prefix:
                    type: string
                attribute:
                    type: boolean
                wrapped:
                    type: boolean
                specificationExtension:
                    type: array
                    items:
                        $ref: '#/components/schemas/NamedAny'
            description: A metadata object that allows for more fine-tuned XML model definitions.  When using arrays, XML element names are *not* inferred (for singular/plural forms) and the `name` property SHOULD be used to add that information. See examples for expected behavior.
tags:
    - name: AddressService
      description: 收货地址
    - name: AuthenticateService
      description: 登录认证
    - name: FavoriteService
      description: 收藏
    - name: InvoiceAccountService
      description: 发票账户
    - name: OrderService
      description: 订单
    - name: ProductService
      description: 产品
    - name: ShoppingCartService
      description: 购物车
    - name: UserService
      description: 用户信息
